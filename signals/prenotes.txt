What's a signal?
=====================

A signal is a construct provided to us by the kernel.

It allows one process to asynchronously send a signal (think a message) to another process. 

If that process wants to accept the signal, it can, and then, for most signals, can decide what to do with that signal.

On a Linux system, see man -s7 signal if you are interested in finding out more 

When are signals generated?
===============================

When the user sends a signal. For example, you are at the terminal, and you send CTRL-C

When a system event happens. For example, you get a SIGCHILD after forking to notice when one of your children have exited.

When another program sends it. For example, when you execute kill -9 PID, it sends SIGKILL

When an appropriate hardware interrupt is triggered. For example, if you access a page that you aren't supposed to, the hardware generates a segfault interrupt which gets intercepted by the kernel. The kernel finds the process that caused this and sends a software interrupt signal SIGSEGV

