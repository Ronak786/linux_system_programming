malloc is using 0x10 additional bytes for each malloc'ed memory block to store the size of the block.

This data will actually be used by free to save it to a list of available blocks for future calls to malloc.

 what are the first 8 bytes of the 16 (0x10 in hexadecimal) bytes used for? It seems to always be zero. Is it just padding?

we probably want to check the source code of malloc to confirm what we just found (malloc.c from the glibc).

1055 /*
1056	   malloc_chunk details:
1057	
1058	    (The following includes lightly edited explanations by Colin Plumb.)
1059	
1060	    Chunks of memory are maintained using a `boundary tag' method as
1061	    described in e.g., Knuth or Standish.  (See the paper by Paul
1062	    Wilson ftp://ftp.cs.utexas.edu/pub/garbage/allocsrv.ps for a
1063	    survey of such techniques.)  Sizes of free chunks are stored both
1064	    in the front of each chunk and at the end.  This makes
1065	    consolidating fragmented chunks into bigger chunks very fast.  The
1066	    size fields also hold bits representing whether chunks are free or
1067	    in use.
1068	
1069	    An allocated chunk looks like this:
1070	
1071	
1072	    chunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
1073	            |             Size of previous chunk, if unallocated (P clear)  |
1074	            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
1075	            |             Size of chunk, in bytes                     |A|M|P|
1076	      mem-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
1077	            |             User data starts here...                          .
1078	            .                                                               .
1079	            .             (malloc_usable_size() bytes)                      .
1080	            .                                                               |
1081	nextchunk-> +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
1082	            |             (size of chunk, but used for application data)    |
1083	            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
1084	            |             Size of next chunk, in bytes                |A|0|1|
1085	            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
1086	
1087	    Where "chunk" is the front of the chunk for the purpose of most of
1088	    the malloc code, but "mem" is the pointer that is returned to the
1089	    user.  "Nextchunk" is the beginning of the next contiguous chunk.


Right before the address returned by malloc to the user, we have two variables:

	Size of previous chunk, if unallocated: we never free'd any chunks so that is why it was always 0
	Size of chunk, in bytes

